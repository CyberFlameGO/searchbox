{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { any, func, object, string, bool, number, arrayOf } from 'prop-types';\nimport { appbaseConfig as appbaseConfigDef, queryTypes, queryFormat as queryFormatDef, dataField as dataFieldDef, sortType, sourceFields, reactType, fuzziness as fuzzinessDef } from \"../utils/types\";\nimport { getComponent, hasCustomRenderer, SearchContext } from \"../utils/helper\";\n\nvar SearchComponent = function (_React$Component) {\n  _inherits(SearchComponent, _React$Component);\n\n  var _super = _createSuper(SearchComponent);\n\n  function SearchComponent(props, context) {\n    var _this;\n\n    _classCallCheck(this, SearchComponent);\n\n    _this = _super.call(this, props, context);\n    _this.state = {};\n    var _this$props = _this.props,\n        id = _this$props.id,\n        index = _this$props.index,\n        url = _this$props.url,\n        credentials = _this$props.credentials,\n        headers = _this$props.headers,\n        appbaseConfig = _this$props.appbaseConfig,\n        transformRequest = _this$props.transformRequest,\n        transformResponse = _this$props.transformResponse,\n        value = _this$props.value,\n        type = _this$props.type,\n        react = _this$props.react,\n        queryFormat = _this$props.queryFormat,\n        dataField = _this$props.dataField,\n        categoryField = _this$props.categoryField,\n        categoryValue = _this$props.categoryValue,\n        nestedField = _this$props.nestedField,\n        from = _this$props.from,\n        size = _this$props.size,\n        sortBy = _this$props.sortBy,\n        aggregationField = _this$props.aggregationField,\n        aggregationSize = _this$props.aggregationSize,\n        after = _this$props.after,\n        includeNullValues = _this$props.includeNullValues,\n        includeFields = _this$props.includeFields,\n        excludeFields = _this$props.excludeFields,\n        fuzziness = _this$props.fuzziness,\n        searchOperators = _this$props.searchOperators,\n        preserveResults = _this$props.preserveResults,\n        highlight = _this$props.highlight,\n        highlightField = _this$props.highlightField,\n        customHighlight = _this$props.customHighlight,\n        interval = _this$props.interval,\n        aggregations = _this$props.aggregations,\n        missingLabel = _this$props.missingLabel,\n        showMissing = _this$props.showMissing,\n        defaultQuery = _this$props.defaultQuery,\n        customQuery = _this$props.customQuery,\n        enableSynonyms = _this$props.enableSynonyms,\n        selectAllLabel = _this$props.selectAllLabel,\n        pagination = _this$props.pagination,\n        queryString = _this$props.queryString,\n        onValueChange = _this$props.onValueChange,\n        onResults = _this$props.onResults,\n        onAggregationData = _this$props.onAggregationData,\n        onError = _this$props.onError,\n        onRequestStatusChange = _this$props.onRequestStatusChange,\n        onQueryChange = _this$props.onQueryChange,\n        onMicStatusChange = _this$props.onMicStatusChange,\n        enablePopularSuggestions = _this$props.enablePopularSuggestions,\n        maxPopularSuggestions = _this$props.maxPopularSuggestions,\n        distinctField = _this$props.distinctField,\n        distinctFieldConfig = _this$props.distinctFieldConfig,\n        enablePredictiveSuggestions = _this$props.enablePredictiveSuggestions;\n    context.register(id, {\n      index: index,\n      url: url,\n      credentials: credentials,\n      headers: headers,\n      appbaseConfig: appbaseConfig,\n      transformRequest: transformRequest,\n      transformResponse: transformResponse,\n      value: value,\n      type: type,\n      react: react,\n      queryFormat: queryFormat,\n      dataField: dataField,\n      categoryField: categoryField,\n      categoryValue: categoryValue,\n      nestedField: nestedField,\n      from: from,\n      size: size,\n      sortBy: sortBy,\n      aggregationField: aggregationField,\n      aggregationSize: aggregationSize,\n      after: after,\n      includeNullValues: includeNullValues,\n      includeFields: includeFields,\n      excludeFields: excludeFields,\n      fuzziness: fuzziness,\n      searchOperators: searchOperators,\n      highlight: highlight,\n      highlightField: highlightField,\n      customHighlight: customHighlight,\n      interval: interval,\n      aggregations: aggregations,\n      missingLabel: missingLabel,\n      showMissing: showMissing,\n      defaultQuery: defaultQuery,\n      customQuery: customQuery,\n      enableSynonyms: enableSynonyms,\n      selectAllLabel: selectAllLabel,\n      pagination: pagination,\n      queryString: queryString,\n      onValueChange: onValueChange,\n      onResults: onResults,\n      onAggregationData: onAggregationData,\n      onError: onError,\n      onRequestStatusChange: onRequestStatusChange,\n      onQueryChange: onQueryChange,\n      onMicStatusChange: onMicStatusChange,\n      enablePopularSuggestions: enablePopularSuggestions,\n      preserveResults: preserveResults,\n      maxPopularSuggestions: maxPopularSuggestions,\n      distinctField: distinctField,\n      distinctFieldConfig: distinctFieldConfig,\n      enablePredictiveSuggestions: enablePredictiveSuggestions\n    });\n    return _this;\n  }\n\n  _createClass(SearchComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          subscribeTo = _this$props2.subscribeTo,\n          triggerQueryOnInit = _this$props2.triggerQueryOnInit;\n\n      if (this.hasCustomRenderer && this.componentInstance) {\n        this.componentInstance.subscribeToStateChanges(function (change) {\n          var state = {};\n          Object.keys(change).forEach(function (property) {\n            state[property] = change[property].next;\n          });\n\n          _this2.setState(state);\n        }, subscribeTo);\n      }\n\n      if (triggerQueryOnInit && this.componentInstance) {\n        this.componentInstance.triggerDefaultQuery();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props3 = this.props,\n          id = _this$props3.id,\n          destroyOnUnmount = _this$props3.destroyOnUnmount;\n\n      if (destroyOnUnmount) {\n        this.context.unregister(id);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.hasCustomRenderer && this.componentInstance) {\n        return getComponent(this.componentInstance.mappedProps, this.props);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"componentInstance\",\n    get: function get() {\n      var id = this.props.id;\n      return this.context.getComponent(id);\n    }\n  }, {\n    key: \"hasCustomRenderer\",\n    get: function get() {\n      return hasCustomRenderer(this.props);\n    }\n  }]);\n\n  return SearchComponent;\n}(React.Component);\n\nSearchComponent.contextType = SearchContext;\nSearchComponent.defaultProps = {\n  triggerQueryOnInit: true,\n  destroyOnUnmount: true,\n  enablePredictiveSuggestions: false\n};\nSearchComponent.propTypes = {\n  index: string,\n  url: string,\n  credentials: string,\n  headers: object,\n  appbaseConfig: appbaseConfigDef,\n  transformRequest: func,\n  transformResponse: func,\n  beforeValueChange: func,\n  enablePopularSuggestions: bool,\n  maxPopularSuggestions: number,\n  preserveResults: bool,\n  id: string.isRequired,\n  value: any,\n  type: queryTypes,\n  react: reactType,\n  queryFormat: queryFormatDef,\n  dataField: dataFieldDef,\n  categoryField: string,\n  categoryValue: string,\n  nestedField: string,\n  from: number,\n  size: number,\n  sortBy: sortType,\n  aggregationField: string,\n  aggregationSize: number,\n  after: object,\n  includeNullValues: bool,\n  includeFields: sourceFields,\n  excludeFields: sourceFields,\n  fuzziness: fuzzinessDef,\n  searchOperators: bool,\n  highlight: bool,\n  highlightField: string,\n  customHighlight: object,\n  interval: number,\n  aggregations: arrayOf(string),\n  missingLabel: string,\n  showMissing: bool,\n  defaultQuery: func,\n  customQuery: func,\n  enableSynonyms: bool,\n  selectAllLabel: string,\n  pagination: bool,\n  queryString: bool,\n  render: func,\n  distinctField: string,\n  distinctFieldConfig: object,\n  enablePredictiveSuggestions: bool,\n  subscribeTo: arrayOf(string),\n  triggerQueryOnInit: bool,\n  onValueChange: func,\n  onResults: func,\n  onAggregationData: func,\n  onError: func,\n  onRequestStatusChange: func,\n  onQueryChange: func,\n  onMicStatusChange: func,\n  destroyOnUnmount: bool\n};\nexport default SearchComponent;","map":{"version":3,"sources":["/Users/mohdashraf/Desktop/searchbox/node_modules/@appbaseio/react-native-searchbox/src/components/SearchComponent.js"],"names":["React","any","func","object","string","bool","number","arrayOf","appbaseConfig","appbaseConfigDef","queryTypes","queryFormat","queryFormatDef","dataField","dataFieldDef","sortType","sourceFields","reactType","fuzziness","fuzzinessDef","getComponent","hasCustomRenderer","SearchContext","SearchComponent","props","context","state","id","index","url","credentials","headers","transformRequest","transformResponse","value","type","react","categoryField","categoryValue","nestedField","from","size","sortBy","aggregationField","aggregationSize","after","includeNullValues","includeFields","excludeFields","searchOperators","preserveResults","highlight","highlightField","customHighlight","interval","aggregations","missingLabel","showMissing","defaultQuery","customQuery","enableSynonyms","selectAllLabel","pagination","queryString","onValueChange","onResults","onAggregationData","onError","onRequestStatusChange","onQueryChange","onMicStatusChange","enablePopularSuggestions","maxPopularSuggestions","distinctField","distinctFieldConfig","enablePredictiveSuggestions","register","subscribeTo","triggerQueryOnInit","componentInstance","subscribeToStateChanges","change","Object","keys","forEach","property","next","setState","triggerDefaultQuery","destroyOnUnmount","unregister","mappedProps","Component","contextType","defaultProps","propTypes","beforeValueChange","isRequired","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { any, func, object, string, bool, number, arrayOf } from 'prop-types';\nimport {\n  appbaseConfig as appbaseConfigDef,\n  queryTypes,\n  queryFormat as queryFormatDef,\n  dataField as dataFieldDef,\n  sortType,\n  sourceFields,\n  reactType,\n  fuzziness as fuzzinessDef\n} from '../utils/types';\nimport {\n  getComponent,\n  hasCustomRenderer,\n  SearchContext\n} from '../utils/helper';\n\nclass SearchComponent extends React.Component {\n  static contextType = SearchContext;\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {};\n    const {\n      id,\n      index,\n      url,\n      credentials,\n      headers,\n      appbaseConfig,\n      transformRequest,\n      transformResponse,\n      value,\n      type,\n      react,\n      queryFormat,\n      dataField,\n      categoryField,\n      categoryValue,\n      nestedField,\n      from,\n      size,\n      sortBy,\n      aggregationField,\n      aggregationSize,\n      after,\n      includeNullValues,\n      includeFields,\n      excludeFields,\n      fuzziness,\n      searchOperators,\n      preserveResults,\n      highlight,\n      highlightField,\n      customHighlight,\n      interval,\n      aggregations,\n      missingLabel,\n      showMissing,\n      defaultQuery,\n      customQuery,\n      enableSynonyms,\n      selectAllLabel,\n      pagination,\n      queryString,\n      onValueChange,\n      onResults,\n      onAggregationData,\n      onError,\n      onRequestStatusChange,\n      onQueryChange,\n      onMicStatusChange,\n      enablePopularSuggestions,\n      maxPopularSuggestions,\n      distinctField,\n      distinctFieldConfig,\n      enablePredictiveSuggestions\n    } = this.props;\n    // Register search base component\n    context.register(id, {\n      index,\n      url,\n      credentials,\n      headers,\n      appbaseConfig,\n      transformRequest,\n      transformResponse,\n      value,\n      type,\n      react,\n      queryFormat,\n      dataField,\n      categoryField,\n      categoryValue,\n      nestedField,\n      from,\n      size,\n      sortBy,\n      aggregationField,\n      aggregationSize,\n      after,\n      includeNullValues,\n      includeFields,\n      excludeFields,\n      fuzziness,\n      searchOperators,\n      highlight,\n      highlightField,\n      customHighlight,\n      interval,\n      aggregations,\n      missingLabel,\n      showMissing,\n      defaultQuery,\n      customQuery,\n      enableSynonyms,\n      selectAllLabel,\n      pagination,\n      queryString,\n      onValueChange,\n      onResults,\n      onAggregationData,\n      onError,\n      onRequestStatusChange,\n      onQueryChange,\n      onMicStatusChange,\n      enablePopularSuggestions,\n      preserveResults,\n      maxPopularSuggestions,\n      distinctField,\n      distinctFieldConfig,\n      enablePredictiveSuggestions\n    });\n  }\n\n  componentDidMount() {\n    const { subscribeTo, triggerQueryOnInit } = this.props;\n\n    // Subscribe to state changes\n    if (this.hasCustomRenderer && this.componentInstance) {\n      this.componentInstance.subscribeToStateChanges(change => {\n        const state = {};\n        Object.keys(change).forEach(property => {\n          state[property] = change[property].next;\n        });\n        this.setState(state);\n      }, subscribeTo);\n    }\n    if (triggerQueryOnInit && this.componentInstance) {\n      this.componentInstance.triggerDefaultQuery();\n    }\n  }\n\n  componentWillUnmount() {\n    const { id, destroyOnUnmount } = this.props;\n    if (destroyOnUnmount) {\n      // unregister component\n      this.context.unregister(id);\n    }\n  }\n\n  get componentInstance() {\n    const { id } = this.props;\n    return this.context.getComponent(id);\n  }\n\n  get hasCustomRenderer() {\n    return hasCustomRenderer(this.props);\n  }\n\n  render() {\n    if (this.hasCustomRenderer && this.componentInstance) {\n      return getComponent(this.componentInstance.mappedProps, this.props);\n    }\n    return null;\n  }\n}\n\nSearchComponent.defaultProps = {\n  // Triggers the default query on init\n  triggerQueryOnInit: true,\n  destroyOnUnmount: true,\n  enablePredictiveSuggestions: false\n};\n\nSearchComponent.propTypes = {\n  index: string,\n  url: string,\n  credentials: string,\n  headers: object,\n  appbaseConfig: appbaseConfigDef,\n  transformRequest: func,\n  transformResponse: func,\n  beforeValueChange: func,\n  enablePopularSuggestions: bool,\n  maxPopularSuggestions: number,\n  preserveResults: bool,\n  // RS API properties\n  // eslint-disable-next-line react/no-typos\n  id: string.isRequired,\n  value: any,\n  type: queryTypes,\n  react: reactType,\n  queryFormat: queryFormatDef,\n  dataField: dataFieldDef,\n  categoryField: string,\n  categoryValue: string,\n  nestedField: string,\n  from: number,\n  size: number,\n  sortBy: sortType,\n  aggregationField: string,\n  aggregationSize: number,\n  after: object,\n  includeNullValues: bool,\n  includeFields: sourceFields,\n  excludeFields: sourceFields,\n  fuzziness: fuzzinessDef,\n  searchOperators: bool,\n  highlight: bool,\n  highlightField: string,\n  customHighlight: object,\n  interval: number,\n  aggregations: arrayOf(string),\n  missingLabel: string,\n  showMissing: bool,\n  defaultQuery: func,\n  customQuery: func,\n  enableSynonyms: bool,\n  selectAllLabel: string,\n  pagination: bool,\n  queryString: bool,\n  render: func,\n  distinctField: string,\n  distinctFieldConfig: object,\n  enablePredictiveSuggestions: bool,\n  // subscribe on changes,\n  subscribeTo: arrayOf(string),\n  triggerQueryOnInit: bool,\n  // event listeners\n  // called when value changes\n  onValueChange: func,\n\n  // called when results change\n  onResults: func,\n\n  // called when composite aggregations change\n  onAggregationData: func,\n\n  // called when there is an error while fetching results\n  onError: func,\n\n  // called when request status changes\n  onRequestStatusChange: func,\n\n  // called when query changes\n  onQueryChange: func,\n\n  // called when mic status changes\n  onMicStatusChange: func,\n\n  // to destroy the component state\n  destroyOnUnmount: bool\n};\n\nexport default SearchComponent;\n"]},"metadata":{},"sourceType":"module"}