{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mohdashraf/Desktop/searchbox/packages/native/examples/with-controlled-props/Search.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { SearchBox, SearchContext } from '@appbaseio/react-native-searchbox';\nexport default function Search(_ref) {\n  var setResetPagination = _ref.setResetPagination;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var searchbase = useContext(SearchContext);\n  useEffect(function () {\n    var searchComponent = searchbase.getComponent('search-component');\n\n    if (searchComponent) {\n      searchComponent.triggerDefaultQuery();\n    }\n  }, [searchbase, text]);\n  return React.createElement(SearchBox, {\n    id: \"search-component\",\n    dataField: [{\n      field: 'original_title',\n      weight: 1\n    }, {\n      field: 'original_title.search',\n      weight: 3\n    }],\n    onValueSelected: function onValueSelected(value) {\n      setResetPagination(true);\n    },\n    value: text,\n    onChange: function onChange(value, searchComponent) {\n      setText(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  });\n}\n;","map":{"version":3,"sources":["/Users/mohdashraf/Desktop/searchbox/packages/native/examples/with-controlled-props/Search.js"],"names":["React","useState","useContext","useEffect","SearchBox","SearchContext","Search","setResetPagination","text","setText","searchbase","searchComponent","getComponent","triggerDefaultQuery","field","weight","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SACEC,SADF,EAEEC,aAFF,QAGO,mCAHP;AAKA,eAAe,SAASC,MAAT,OAAwC;AAAA,MAAtBC,kBAAsB,QAAtBA,kBAAsB;;AAAA,kBAC7BN,QAAQ,CAAC,EAAD,CADqB;AAAA;AAAA,MAC9CO,IAD8C;AAAA,MACxCC,OADwC;;AAGrD,MAAMC,UAAU,GAAGR,UAAU,CAACG,aAAD,CAA7B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMQ,eAAe,GAAGD,UAAU,CAACE,YAAX,CAAwB,kBAAxB,CAAxB;;AACF,QAAGD,eAAH,EAAoB;AAEhBA,MAAAA,eAAe,CAACE,mBAAhB;AAGH;AACH,GARS,EAQP,CAACH,UAAD,EAAaF,IAAb,CARO,CAAT;AAUA,SACM,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,kBADL;AAEE,IAAA,SAAS,EAAE,CACT;AACEM,MAAAA,KAAK,EAAE,gBADT;AAEEC,MAAAA,MAAM,EAAE;AAFV,KADS,EAKT;AACED,MAAAA,KAAK,EAAE,uBADT;AAEEC,MAAAA,MAAM,EAAE;AAFV,KALS,CAFb;AAYE,IAAA,eAAe,EAAE,yBAAAC,KAAK,EAAI;AACxBT,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,KAdH;AAeE,IAAA,KAAK,EAAEC,IAfT;AAgBE,IAAA,QAAQ,EAAE,kBAACQ,KAAD,EAAQL,eAAR,EAA4B;AACpCF,MAAAA,OAAO,CAACO,KAAD,CAAP;AACD,KAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN;AAsBD;AAAA","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport {\n  SearchBox,\n  SearchContext\n} from '@appbaseio/react-native-searchbox';\n\nexport default function Search({ setResetPagination }) {\n  const [text, setText] = useState('');\n\n  const searchbase = useContext(SearchContext);\n  useEffect(() => {\n      const searchComponent = searchbase.getComponent('search-component');\n    if(searchComponent) {\n        // To fetch suggestions\n        searchComponent.triggerDefaultQuery();\n        // To update results\n        // searchComponent.triggerCustomQuery();\n    }\n }, [searchbase, text])\n\n  return (\n        <SearchBox\n          id=\"search-component\"\n          dataField={[\n            {\n              field: 'original_title',\n              weight: 1\n            },\n            {\n              field: 'original_title.search',\n              weight: 3\n            }\n          ]}\n          onValueSelected={value => {\n            setResetPagination(true);\n          }}\n          value={text}\n          onChange={(value, searchComponent) => {\n            setText(value);\n          }}\n        />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}